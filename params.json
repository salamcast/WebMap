{"name":"Webmap","tagline":"WebMap is an xHTML Web Frontend to the nmap console utility","body":"> There are many useful tools that execute interesting tasks but they only provide a command line interface to execute them. \r\n>\r\n> That is the case of the nmap security audit tool.  \r\n>\r\n> This class provides a Web based user interface to nmap that is more user friendly. \r\n>\r\n> It can not only allow the user to configure nmap options with forms based page, but also present the nmap output results on the same Web page. \r\n>\r\n> Manuel Lemos\r\n\r\n##Here's a basic setup of this php program\r\n\r\n### Add it into your script with require\r\n    require_once 'nmap.cls.php';\r\n\r\n### Set nMap location on your system\r\n    $n=new WebMap('/opt/local/bin/nmap'); // will fail if not found\r\n\r\n### For xHTML output, call the header\r\n    $n->header(); // used for xhtml output\r\n\r\n### This prints the xHTML form\r\n    echo $n;\r\n\r\n### Run nMap scan \r\nRuns the nMap scan if the options have been passed with the form, set to true to log nMap scan (the tee command is used to make log), prints to the browser when done.\r\n\r\n    $n->run_nmap();\r\n\r\n### close xhtml output \r\nThis is required if header() was called\r\n\r\n    $n->footer();\r\n\r\n\r\nThat's it, just note some **nmap commands/scans wont run because they require root access**, so it's up to you to set that up. Running your web server as root on a public system would be a bad idea...\r\n\r\npeace","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}